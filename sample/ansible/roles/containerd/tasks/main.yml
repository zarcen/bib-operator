---
# This is a must for images built from container engine like Docker, Podman, etc.
- name: Ensure /etc/resolv.conf is a symlink for systemd-resolved
  ansible.builtin.file:
    src: /run/systemd/resolve/stub-resolv.conf
    dest: /etc/resolv.conf
    state: link
    force: yes
---
- name: Download containerd tarball
  ansible.builtin.get_url:
    url: "{{ containerd_url }}"
    dest: /tmp/containerd.tar.gz
    mode: '0644'
- name: Verify containerd checksum
  ansible.builtin.command:
    cmd: "sha256sum -c -"
    stdin: "{{ containerd_sha256 }}  /tmp/containerd.tar.gz"
  register: checksum_result
  changed_when: false
  failed_when: checksum_result.rc != 0
- name: Extract containerd binary
  ansible.builtin.unarchive:
    src: /tmp/containerd.tar.gz
    dest: /usr/local
    remote_src: yes
- name: Remove containerd tarball
  ansible.builtin.file:
    path: /tmp/containerd.tar.gz
    state: absent
- name: Create containerd config directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'
- name: Generate default containerd config
  ansible.builtin.command:
    cmd: containerd config default
  register: containerd_default_config
- name: Write containerd config file
  ansible.builtin.copy:
    dest: "{{ containerd_config_file }}"
    content: "{{ containerd_default_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"
    mode: '0644'
- name: Create systemd override directory for containerd
  ansible.builtin.file:
    path: /etc/systemd/system/containerd.service.d
    state: directory
    mode: '0755'
- name: Create containerd memory pressure drop-in file
  ansible.builtin.template:
    dest: /etc/systemd/system/containerd.service.d/memory-pressure.conf
    src: sample/ansible/roles/containerd/templates/etc/systemd/system/containerd.service.d/memory-pressure.conf
    mode: "0644"
- name: Create containerd max tasks drop-in file
  ansible.builtin.template:
    dest: /etc/systemd/system/containerd.service.d/max-tasks.conf
    src: sample/ansible/roles/containerd/templates/etc/systemd/system/containerd.service.d/max-tasks.conf
    mode: "0644"
- name: Copy containerd systemd service file
  ansible.builtin.copy:
    src: "sample/ansible/roles/containerd/templates/etc/systemd/system/containerd.service"
    dest: "/etc/systemd/system/containerd.service"
    mode: '0
- name: Copy mount-shared service
  ansible.builtin.copy:
    src: "sample/ansible/roles/containerd/templates/etc/systemd/system/module-load.service"
    dest: "/etc/systemd/system/mount-shared.service"
    mode: '0644'
- name: Copy module-load service
  ansible.builtin.copy:
    src: "sample/ansible/roles/containerd/templates/etc/systemd/system/mount-shared.service"
    dest: "/etc/systemd/system/module-load.service"
    mode: '0644'
# --------------------------
# Start and enable systemd services
# --------------------------
- name: Start and enable key systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    daemon_reload: true
    enabled: true
    state: restarted
  loop:
    - containerd
    - mount-shared
    - module-load

# --------------------------
# Install crictl (pinned)
# --------------------------
- name: Download crictl tarball
  ansible.builtin.get_url:
    url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ crictl_version }}/crictl-v{{ crictl_version }}-linux-amd64.tar.gz"
    dest: /tmp/crictl.tar.gz
    mode: '0644'
- name: Extract crictl binary
  ansible.builtin.unarchive:
    src: /tmp/crictl.tar.gz
    dest: /usr/local/bin
    remote_src: yes
- name: Remove crictl tarball
  ansible.builtin.file:
    path: /tmp/crictl.tar.gz
    state: absent
- name: Copy crictl configuration file
  ansible.builtin.copy:
    src: templates/etc/crictl.yaml
    dest: /etc/crictl.yaml
    mode: '0644'